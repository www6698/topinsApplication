<UserControl x:Class="topinsApplication.topinsContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:topinsApplication"
             mc:Ignorable="d"
             IsTabStop="False" FocusVisualStyle="{x:Null}">
    <Grid>
        <i:Interaction.Behaviors>
            <local:tpBindElementBehavior/>
        </i:Interaction.Behaviors>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="1"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="36"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="8"/>
            <ColumnDefinition Width="{Binding ControlPadWidth}"/>
            <ColumnDefinition Width="8"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Row="2" Grid.Column="1">
            <ContentControl Content="{Binding Path=ToolBarEx}" VerticalContentAlignment="Stretch"/>
        </DockPanel>

        <Separator Grid.Row="2" Grid.Column="2" Background="#FF3D3D3D">
            <Separator.LayoutTransform>
                <RotateTransform Angle="90"/>
            </Separator.LayoutTransform>
        </Separator>
        <Grid Grid.Row="2" Grid.Column="3">
            <Image Source="{Binding Image}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="{Binding StretchImage}" Margin="4"/>

            <Canvas>
                <!--<DockPanel Canvas.Bottom="0" Canvas.Left="0" Width="{Binding OrgWidth}" Height="{Binding OrgHeight}" Margin="4">-->
                <DockPanel Visibility="{Binding IsOriginalVisible}" Canvas.Bottom="0" Canvas.Left="0" Width="640" Height="512" Margin="4">
                    <Image Source="{Binding Image}"/>
                </DockPanel>
                
                <DockPanel Canvas.Top="0" Canvas.Right="0">
                    <Viewbox Width="24" Height="24" Margin="0,16,8,0" Opacity="1">
                        <Path x:Name="AnimatingPath" Data="{DynamicResource Screen}" Fill="#FFE55798" Stretch="Uniform">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" CenterX="12" CenterY="12"/>
                            </Path.RenderTransform>

                            <Path.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" From="1" To="1.5" Duration="0:0:0.6"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" From="1" To="1.5" Duration="0:0:0.6"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Path.Triggers>
                        </Path>
                    </Viewbox>

                    <Viewbox Width="24" Height="24" Margin="8,16,16,0">
                        <Path Data="{DynamicResource Record}" Stretch="Uniform">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="Red"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Recording}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.8" To="0" Duration="0:0:0.8" AutoReverse="True"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Recording}" Value="False">
                                            <Setter Property="Fill" Value="{DynamicResource SystemButtonsMousePressedBackground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Viewbox>
                </DockPanel>
            </Canvas>
        </Grid>

        <DockPanel x:Name="ControlPad" Grid.Row="2" Grid.Column="5">
            <Border BorderBrush="#FF383838" BorderThickness="1,1,1,1">
                <ItemsControl ItemsSource="{Binding DockPanelControl}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding }"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </DockPanel>

        <!--<Popup IsOpen="{Binding IsPopupOpen}" StaysOpen="{Binding IsStayOpen, Mode=TwoWay}" HorizontalOffset="{Binding HorizontalOffset}" VerticalOffset="{Binding VerticalOffset}" Placement="Absolute" PopupAnimation="Slide" AllowsTransparency="True">-->
        <Popup IsOpen="{Binding IsPopupOpen}" HorizontalOffset="{Binding HorizontalOffset}" VerticalOffset="{Binding VerticalOffset}" Placement="Absolute" PopupAnimation="Slide" AllowsTransparency="True">
            <Popup.Effect>
                <BlurEffect RenderingBias="Quality" KernelType="Gaussian"/>
            </Popup.Effect>
            
            <Border BorderBrush="#FF3D3D3D" Background="#FF1E1E1E" BorderThickness="1" CornerRadius="8" Opacity="0.5">
                <i:Interaction.Behaviors>
                    <local:tpEventToCommandBehavior EventName="MouseLeftButtonDown" Command="{Binding PopupMouseDown}"/>
                    <local:tpEventToCommandBehavior EventName="MouseMove" Command="{Binding PopupMouseMove}"/>
                    <local:tpEventToCommandBehavior EventName="MouseLeftButtonUp" Command="{Binding PopupMouseUp}"/>
                </i:Interaction.Behaviors>

                <ItemsControl ItemsSource="{Binding PopupContent}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding }"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Popup>

    </Grid>
</UserControl>
